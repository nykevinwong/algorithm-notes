43. Multiply Strings (Medium)
Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.
Example 1: Input: num1 = "2", num2 = "3" Output: "6"
Example 2: Input: num1 = "123", num2 = "456" Output: "56088"
;The length of both num1 and num2 is < 110.
Both num1 and num2 contain only digits 0-9.
Both num1 and num2 do not contain any leading zero, except the number 0 itself.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

public String multiply(String num1, String num2) {
    int m = num1.length(), n = num2.length();
    int[] pos = new int[m + n];
   
    for(int i = m - 1; i >= 0; i--) {
        for(int j = n - 1; j >= 0; j--) {
            int mul = (num1.charAt(i) - '0') * (num2.charAt(j) - '0'); 
            int p1 = i + j, p2 = i + j + 1;
            int sum = mul + pos[p2];

            pos[p1] += sum / 10;
            pos[p2] = (sum) % 10;
        }
    }  
    
    StringBuilder sb = new StringBuilder();
    for(int p : pos) if(!(sb.length() == 0 && p == 0)) sb.append(p);
    return sb.length() == 0 ? "0" : sb.toString();
}

public String multiply2(String num1, String num2) {
	int[] res = new int[num1.length()+num2.length()];
	int k = 0;
	
	for(int i=num1.length()-1;i>=0;i--)
	{
		int x = (int)(num1.charAt(i)-'0');
		int carry = 0;
		int len = k++;  // 0,1,2,3...
		for(int j=num2.length()-1;j>=0;j--)
		{
			if(res[len]>0) carry+=res[len];
			int y = (int)(num2.charAt(j)-'0');
			int product = x*y+carry;
			res[len++] = (product%10);
			carry = product/10;                
		}       
		if(carry>0) res[len]+=carry;      
	}
		
	StringBuilder sb = new StringBuilder();
	for(int i=res.length-1;i>=0;i--)
	{
		if(!(sb.length()==0 && res[i]==0) ) sb.append(res[i]);
	}
	
	return sb.toString();
}
