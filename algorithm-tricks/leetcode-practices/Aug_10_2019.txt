973. K Closest Points to Origin (Medium)
We have a list of points on the plane.  Find the K closest points to the origin (0, 0).
You may return the answer in any order.  The answer is guaranteed to be unique (except for the order that it is in.)

// solution 1: Sorting
    public int[][] kClosest(int[][] points, int K) {
        Arrays.sort(points, Comparator.comparing(p -> p[0] * p[0] + p[1] * p[1]));
        return Arrays.copyOfRange(points, 0, K); 
    }

// solution 2: PriorityQueue
// Time: O(N*log(K)) , Space: O(K)
    public int[][] kClosest(int[][] points, int K) {        
        PriorityQueue<int[]> pq = new PriorityQueue<int[]>(new Comparator<int[]>() {
            @Override
            public int compare(int[] p1, int[] p2) {
                double dist1 = Math.sqrt(p1[0]*p1[0]+p1[1]*p1[1]);
                double dist2 = Math.sqrt(p2[0]*p2[0]+p2[1]*p2[1]);
                // below return vlaue is very important
                if(dist1 > dist2)  return 1;
                else if(dist1 < dist2) return -1;
                return 0;                    
            }
        });
        
        for(int[] p : points)
        {
            pq.add(p);
        }
        
        int[][] res = new int[K][];        
            
        for(int i=0;i<K;i++)
        {
            int[] p = pq.poll();
            res[i] = p;
        }
        
        return res;
    }
