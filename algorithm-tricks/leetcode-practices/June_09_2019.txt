9. Palindrome Number (Easy)
Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Input: 121   Output: true

Input: -121  Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.

Input: 10    Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
Follow up: Coud you solve it without converting the integer to a string?

   public boolean isPalindrome(int x) {
        int temp = Math.abs(x);
        int res = 0;
        while(x > 0)
        {
            int r = x % 10;            
            x = x / 10;
            res = 10 * res + r;
        }

        return (res==temp);
    }

125. Valid Palindrome (Easy)
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
Note: For the purpose of this problem, we define empty string as valid palindrome.
Input: "A man, a plan, a canal: Panama" Output: true
Input: "race a car" Output: false

    public boolean isPalindrome(String s) {        
        int l = 0, r = s.length() - 1;
        
        while (l < r) 
        {
            while (l < r && !Character.isLetterOrDigit(s.charAt(l)))  l++;
            while (l < r && !Character.isLetterOrDigit(s.charAt(r)))  r--;
            
            if (Character.toLowerCase(s.charAt(l)) != Character.toLowerCase(s.charAt(r)))
                return false;
            l++; r--;
        }
        return true;    
    }
    