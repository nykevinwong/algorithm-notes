Leetcode 面試題心訣 (Cracking Code interview questions)

序: 心訣是為了加快每日復習速度,並保證能記下189題解思路不忘. 快速復習只看最佳解。仔細復習看各種解。當天時間夠，看各種解。時間不夠，只看最佳解。

(1) determine unique character string (獨特字串，無重覆字元的字串)
資料結構(最佳解): 用字元集大小陣列，一迴圈記錄字元出現次數，出現超過一次即不是獨特字串. 用布林值陣列，則查字元是否已出現過. O(n),O(c)
位元組(最佳優化解): 如果是a-z的26個字，可用32位元的int來代替陣列。 用 if(checker & ( 1 << val) > 0) 來檢查，並用 checker |= & (1 << val) 來存相對應的字元是否出現過.
排序: 先排序，一迴圈碰底前，當前字元比較下個字元是否相同. O(nlog(n))
暴力解: 二迴圈比較每字元是否相同. O(n^2) 

(2) Given two string, determine one string is a permutation of the other. (某字串是否是另一字串的排列組合)
資料結構: 檢查兩字串是否有相同的字元數. 用字元集大小陣列，一迴圈遞增記錄一字串字元出現次數. 另一迴圈針對另一字串遞減同陣列字元計數，並檢查是否當前字元計數小於零. 小於零，則當前字串不是排列組合，最後整個陣列為零，即是排列組合。 O(n) 
排序: 先排序兩字串，然後遂字比較所有字元是否相等. O(nlog(n))
暴力解(超時無用): 產生某字串的所有排序組合，並檢查是否另一字串為其中一個組合.

(3) URLify: replace space with '%20' in a URL string. (將字串中的空白以%20替換. 可否原地操作?)
原地操作(最佳解): 計算原字串的空白字數，算出替換後的字串長度及最後位置。從替換後字串的最後位置及從原字串的最後字元位置，一迴圈遂字拷貝，遇到空白字元不拷貝，換成%20三字元到對應陣列位置上. 
arr[index-3]='2'; arr[index-2]='0'; arr[index-1]='%'; index-= ;
暴力解: 建一新空字串或StringBuilder，遂字元拷貝到新字串，遇到空白字元不拷貝，append %20.

(4)迴文排列組合


(1) unique letter string: 獨特串 字數一. 或布林,用遮罩. 排序字，鄰非等. 比各字,增二歷.  
(2) permutation: 排組題 排序等. 字數同. 遍歷增，遍歷減. 負不等.
(3) 將空白用%20替換,要原處操作: 替換字,長不同,計長度, 標字尾, 倒遍歷,倒換字. 
(4) 迴文排列組合: 迴文題，計需字，有單雙，左右等。奇字計，不超一. 計單雙. 用開關.
(5) 單次編輯結果: 單編輯,替換別.一字差. 插入別 刪插別. 刪反插.
(6) 字串壓:  串壓 全遍歷，計字數. 串底或 當非前 壓字串 重計數. 傳短串.
(7) 矩陣右轉90度: 右旋矩 外至內 增二歷 至一半 初減一 換四位 暫存數 順時轉 ni時換 ni時轉 順時換     
(8) 零矩陣:  零矩陣 遇零位 記列標 記欄標 遍歷遇 設為零
             零矩陣 遇零位 四方值 皆他值 遍歷遇 設為零
(9) 字串旋轉 

(2.1) 刪除未排序鏈接清單的重複資料: 未序鏈，刪重複 哈希表 記各數 記前點 前可除 當前點 
                                  未序鏈，刪重複 雙指標 遍二歷 可NEXT 除當前   
(2.2) 傳回序鏈接清單中，倒數第K個值至最後一個值.
(2.3) 只給你一個節點，刪除中間節點: 鏈結表 給一點 刪此點 複下點 除下點
(2.4) 劃分，給一數。將鏈結表所有數，以此數劃分前後清單。小於前，大等後:
      劃分鏈 給一數 小於前 大等後 新二鏈. 可合一. 
      劃分鏈 不求穩 頭尾點 小放前 大放後. 傳新頭.
      

hash map表  .常數讀，常數存.線性量.
記频率，記座標.記字數，字座標.
兩數算，前存數.

布林表,遮罩存.

數與閘，一左移，對位罩，開關位.
或此罩，設為一。與反罩。清位零.
數減一，與此數，若為零，一個一。

迴文題，有單雙，左右等。
排組題。字數同。排序等。

